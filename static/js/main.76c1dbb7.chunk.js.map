{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","ok","Error","status","json","catch","error","App","useState","visibleGoods","setVisibleGoods","className","type","onClick","result","sort","g1","g2","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"8NAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CACLC,MAAOF,EAAKE,OAJhB,SAOGF,EAAKG,MANDH,EAAKI,U,OCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,iBAGR,OAAOH,EAASI,UAEjBC,OAAM,SAACC,GACN,MAAMA,KCPL,IAAMC,EAAgB,WAC3B,MAAwCC,mBAAiB,IAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,WACPhB,IAASE,MAAK,SAAAe,GAAM,OAAIJ,EAAgBI,OAJ5C,4BAUA,wBACEF,KAAK,SACL,UAAQ,oBACRC,QAAS,WDRRhB,IAASE,MAAK,SAACT,GACpB,OAAO,YAAIA,GACRyB,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGrB,KAAKuB,cAAcD,EAAGtB,SAC1CwB,MAAM,EAAG,MCMMpB,MAAK,SAAAe,GAAM,OAAIJ,EAAgBI,OAJ/C,gCAUA,wBACEF,KAAK,SACL,UAAQ,aACRC,QAAS,WDVRhB,IAASE,MAAK,SAACT,GACpB,OAAOA,EAAM8B,QAAO,SAAC5B,GAAD,MAAyB,QAAfA,EAAKE,YCUfK,MAAK,SAAAe,GAAM,OAAIJ,EAAgBI,OAJjD,4BAUA,cAAC,EAAD,CAAWxB,MAAOmB,QC1CxBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.76c1dbb7.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{\n          color: good.color,\n        }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} status code`);\n      }\n\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n}\n\nexport function get5First(): Promise<Good[]> {\n  return getAll().then((goods) => {\n    return [...goods]\n      .sort((g1, g2) => g1.name.localeCompare(g2.name))\n      .slice(0, 5);\n  });\n}\n\nexport function getRedGoods(): Promise<Good[]> {\n  return getAll().then((goods) => {\n    return goods.filter((good) => good.color === 'red');\n  });\n}\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { get5First, getAll, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [visibleGoods, setVisibleGoods] = useState<Good[]>([]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => {\n          getAll().then(result => setVisibleGoods(result));\n        }}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => {\n          get5First().then(result => setVisibleGoods(result));\n        }}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => {\n          getRedGoods().then(result => setVisibleGoods(result));\n        }}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}